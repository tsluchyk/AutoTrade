@model AutoTrade.WebUI.Models.VehiclesSummaryModelForPaging
@using AutoTrade.WebUI.Infrastructure;
@using AutoTrade.Domain.Concrete;

@using (Ajax.BeginForm("Grid", "AutoModel", new AjaxOptions
 {
     HttpMethod = "Get",
     InsertionMode = InsertionMode.Replace,
     UpdateTargetId = "gridContainer"
 },
 new { id = "filter" }))
{
        <div class="well well-small">
            <div class="row-fluid">
                <div class="control-group span6">
                    <label class="control-label">Brands:</label>
                    @Html.DropDownList("ActualBrands", String.Empty)
                </div>

                <div class="control-group span6">
                    <label class="control-label">Auto models:</label>
                    @Html.DropDownList("ActualAutoModels", String.Empty)
                </div>
            </div>

            <div class="row-fluid">
                <div class="control-group span6">
                     <label class="control-label">Color (e.g. red)</label>
                    @Html.TextBox("color")
                </div>
                
                 
                <div class="control-group span6">
                    <label class="control-label">Cubic Capacity (in ccm)</label>
                    @Html.TextBox("capacity")
                </div>
            </div>

            <div class="row-fluid">
           
                <div class="control-group span6">
                    <label class="control-label">Price From (in USD)</label>
                    <input class="controls" type="text" id="minPrice" name="minPrice" />
                </div> 
                <div class="control-group span6">
                    <label class="control-label">Price To (in USD)</label>
                    <input class="controls" type="text" id="maxPrice" name="maxPrice" />
                </div>
            </div>
               
            <div class="row-fluid">    
                <div class="controls">
                    <input id="btnSubmit" type="submit" class="btn btn-primary" value="Search" />
                </div>
            </div>
        </div>

    <div class="row-fluid">
        <label class="control-label">Items per page:</label>
        @Html.DropDownList("ItemsPerPage",
                            new SelectList(new[] { "5", "10", "50", "100" }),
                            String.Empty)
    </div>
    
}    
     
<div class="row-fluid">
    
    <h2>Catalog</h2>
               
    <div id="gridContainer">
        @Html.Partial("Ajax_Grid", Model)
    </div>
</div> 

<script type="text/javascript">

    $(document).ready(function () {

        $(".visibility").live('click', _hiddeColumn);

        function _hiddeColumn() {
            var num = $(this).closest("th").index() + 1;
            $("#ajaxGrid thead th:nth-child(" + num + ")").attr("style", "display:none");
            $("#ajaxGrid tbody td:nth-child(" + num + ")").attr("style", "display:none");

            return false;
        };

        $('#gridContainer table thead tr a').live('click', _updateGrid); // hook up ajax refresh for sorting links
        $('#gridContainer table tfoot tr a').live('click', _updateGrid); // hook up ajax refresh for paging links 

        function _updateGrid(e) {
            e.preventDefault();
            var url = $(this).attr('href');
            var grid = $(this).parents('#ajaxGrid'); // get the grid
            grid.load(url);
        };

        $('#ActualBrands').change(function () {
            var selectedBrand = $("#ActualBrands option:selected").val();

            $('#ActualAutoModels').empty();
            $('#ActualAutoModels').append('<option value=""></option>');

            $.ajax({
                url: "/AutoModel/GetAutoModelsByIdBrand?id=" + selectedBrand,
                success: function (data) {
                    $.each(data, function (i, item) {
                        //$('#ActualAutoModels').append('<option value="' + item.Value + '">' + item.Text + '</option>');
                        $('#ActualAutoModels').append(new Option(item.Text, item.Value));
                    })
                }
            });
        });

        $('#ItemsPerPage').change(function () {
            document.getElementById("btnSubmit").click();

        });

        $("#color").autocomplete({
            source: function (request, response) {
                $.getJSON("/AutoModel/GetUniqueColors?term=" + request.term, function (data) {
                    response(data);
                });
            },
            minLength: 2,
            delay: 300
        });


        $("#capacity").autocomplete({
            source: function (request, response) {
                $.getJSON("/AutoModel/GetUniqueCapacity?term=" + request.term, function (data) {
                    response(data);
                });
            },
            minLength: 2,
            delay: 300
        });

    });

</script>