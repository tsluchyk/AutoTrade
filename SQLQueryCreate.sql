--use master;
--go

--create database AutoTrade
--on
--(
--name=AutoTrade_dat,
--filename="d:\autotrade.mdf",
--size=10,
--maxsize=50,
--filegrowth=5
--)
--log on
--(
--name=AutoTrade_log,
--filename="d:\autotrade.ldf",
--size=5MB,
--maxsize=25MB,
--filegrowth=5MB
--);
--go

--use AutoTrade;
--go
--create table Brands
--(
--Id int identity primary key not null,
--Name nvarchar(50) not null
--);
--go

--use AutoTrade;
--go
--create table AutoModels
--(
--Id int identity primary key not null,
--IdBrand int constraint fk_IdBrand foreign key
--references Brands(Id)
--on delete cascade
--on update cascade,
--Name nvarchar(50) not null,
--Color nvarchar(50),
--CubicCapacity decimal not null,
--Price decimal not null,
--[Description] nvarchar(250)
--);
--go

--use AutoTrade;
--go
--create table PricesHistory
--(
--Id int identity primary key not null,
--IdAutoModel int constraint fk_IdAutoModel foreign key
--references AutoModels(Id)
--on delete cascade
--on update cascade,
--ChangeDate date not null default getdate(),
--Price decimal not null
--);
--go

--use AutoTrade;
--go
--create trigger ChangePriceEvent 
--on AutoModels
--for insert, update
--not for replication
--as
--set nocount on;
--begin
--	if not exists
--		(
--		select *
--		from dbo.PricesHistory as PH, inserted as i
--		where PH.IdAutoModel=i.Id and
--			PH.ChangeDate=getdate() and
--			PH.Price=i.Price
--		)
--	insert into PricesHistory(IdAutoModel,Price)
--	select Id, Price
--	from inserted 
--end;
--go

----use AutoTrade;
----go
----drop table Brand;
----go

----create trigger ChangePriceEvent 
----on Model
----for insert, update, delete
----not for replication
----as
----set nocount on;

----declare @change_type as varchar(10)
----declare @count as int

----set @change_type = 'inserted'
----	select @count = COUNT(*) FROM DELETED
----	if @count > 0
----		begin
----			set @change_type = 'deleted'
----				select @count = COUNT(*) from INSERTED
----				if @Count > 0
----					set @change_type = 'updated'
----		end;
----if @change_type='inserted' or @change_type='updated'
----	begin
----		if not exists(
----				select *
----				from dbo.PriceHistory as PH, inserted as i
----				where PH.IdModel=i.Id and
----					PH.ChangeDate=getdate() and
----					PH.Price=i.Price)
----			insert into PriceHistory(IdModel,Price)
----			select Id, Price
----			from inserted 
----	end;
----else
----	begin
----		delete from dbo.PriceHistory
----		where IdModel=(select Id from deleted)
----	end;
----go